{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/nikita/bichat-client/bichat-client/node_modules/react-native-chat-component/src/ChatComponent/index.js\";\n\nimport React, { FC, useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { RecyclerViewBackedScrollView } from \"react-native-web/dist/index\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport IconMCI from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport Foundation from \"@expo/vector-icons/Foundation\";\nimport Styles from \"./styles\";\n\nvar ChatComponent = function ChatComponent(_ref) {\n  var data = _ref.data,\n      onClickVideo = _ref.onClickVideo,\n      onClickDocument = _ref.onClickDocument,\n      onClickLocation = _ref.onClickLocation,\n      textInputShow = _ref.textInputShow,\n      textInputPlaceholder = _ref.textInputPlaceholder,\n      onSend = _ref.onSend,\n      chatColor = _ref.chatColor,\n      user = _ref.user,\n      onSystemMessage = _ref.onSystemMessage,\n      onDeleteMessage = _ref.onDeleteMessage,\n      onfavoriteMessage = _ref.onfavoriteMessage,\n      onPostClick = _ref.onPostClick,\n      PostButtonView = _ref.PostButtonView,\n      tickViewShow = _ref.tickViewShow,\n      quickRepliesRightColor = _ref.quickRepliesRightColor,\n      quickRepliesLeftColor = _ref.quickRepliesLeftColor,\n      onQuickReplies = _ref.onQuickReplies,\n      backgroundImage = _ref.backgroundImage,\n      writing = _ref.writing;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      item = _useState4[0],\n      setItem = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageState = _useState6[0],\n      setMessageState = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messagePosition = _useState8[0],\n      setMessageposition = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imageShowState = _useState10[0],\n      setImageShowState = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      postShowState = _useState12[0],\n      setpostShowState = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showItemImage = _useState14[0],\n      setShowItemImage = _useState14[1];\n\n  var tickView = function tickView(tick) {\n    if (!tickViewShow) return null;\n    if (tick === '0') return null;else if (tick == 1) return React.createElement(IconMCI, {\n      color: 'white',\n      name: \"alarm-check\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }\n    });else if (tick == 2) return React.createElement(IconMCI, {\n      color: 'white',\n      name: \"check\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }\n    });else if (tick == 3) return React.createElement(IconMCI, {\n      color: 'white',\n      name: \"check-all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }\n    });else if (tick == 4) return React.createElement(IconMCI, {\n      color: '#42fb05',\n      name: \"check-all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }\n    });\n  };\n\n  var imageView = function imageView(image) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setShowItemImage(image);\n        setImageShowState(!imageShowState);\n        setMessageState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: Styles.image,\n      source: {\n        uri: image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var imagesView = function imagesView(images) {\n    return React.createElement(FlatList, {\n      style: Styles.imagesFlatList,\n      data: images,\n      numColumns: 2,\n      renderItem: function renderItem(item) {\n        return React.createElement(TouchableOpacity, {\n          key: item.item.id,\n          style: Styles.imagesButton,\n          onPress: function onPress() {\n            setShowItemImage(item.item.image);\n            setImageShowState(!imageShowState);\n            setMessageState(false);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          style: Styles.images,\n          source: {\n            uri: item.item.image\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var imageShow = function imageShow() {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setImageShowState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.imageShowContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      resizeMode: \"contain\",\n      style: Styles.showImage,\n      source: {\n        uri: showItemImage\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var quickRepliesView = function quickRepliesView(quickReplies, position) {\n    return React.createElement(View, {\n      style: Styles.quickRepliesContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, quickReplies.map(function (item, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return onQuickReplies(item);\n        },\n        style: [Styles.quickRepliesButton, {\n          borderColor: position == 'left' ? quickRepliesLeftColor : quickRepliesRightColor\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [Styles.quickRepliesText, {\n          color: position == 'left' ? quickRepliesLeftColor : quickRepliesRightColor\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, item.text));\n    }));\n  };\n\n  var messageSettings = function messageSettings() {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setMessageState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.messageSettingsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, messagePosition == 'r' ? rightView(item) : leftView(item), React.createElement(View, {\n      style: [Styles.settingsContainer, {\n        backgroundColor: messagePosition == 'r' ? '#1cafff' : 'white'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        onfavoriteMessage(item);\n        setMessageState(false);\n      },\n      style: Styles.settingButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [Styles.settingButtonText, {\n        color: messagePosition == 'r' ? 'white' : '#979797'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Y\\u0131ld\\u0131z\"), React.createElement(AntDesign, {\n      style: Styles.settingButtonIcon,\n      color: messagePosition == 'r' ? 'white' : '#979797',\n      name: \"star\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    })), item.text ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        Clipboard.setString(item.text);\n        setMessageState(false);\n      },\n      style: Styles.settingButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: [Styles.settingButtonText, {\n        color: messagePosition == 'r' ? 'white' : '#979797'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \"Metin Kopyala\"), React.createElement(AntDesign, {\n      style: Styles.settingButtonIcon,\n      color: messagePosition == 'r' ? 'white' : '#979797',\n      name: \"link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    })) : null, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        onDeleteMessage(item);\n        setMessageState(false);\n      },\n      style: [Styles.settingButton, {\n        borderBottomWidth: 0\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [Styles.settingButtonText, {\n        color: '#FC4A4A'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Sil\"), React.createElement(IconMCI, {\n      style: Styles.settingButtonIcon,\n      color: '#FC4A4A',\n      name: \"delete\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    })))));\n  };\n\n  var postView = function postView() {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setpostShowState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.postContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: Styles.postItemsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var videoView = function videoView(item) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onClickVideo(item.video);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.video,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, user.id == item.user._id ? React.createElement(AntDesign, {\n      name: \"play\",\n      size: 30,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }) : React.createElement(AntDesign, {\n      name: \"play\",\n      size: 30,\n      color: \"rgba(0,0,0,.7)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var documentView = function documentView(item) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        var url = JSON.parse(item.documents).path;\n        onClickDocument(url);\n      },\n      style: Styles.documentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, item.user._id == user.id ? React.createElement(React.Fragment, null, React.createElement(IconMCI, {\n      name: \"file-document\",\n      size: 30,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"Dosyay\\u0131 A\\xE7\")) : React.createElement(React.Fragment, null, React.createElement(IconMCI, {\n      name: \"file-document\",\n      size: 30,\n      color: \"rgba(0,0,0,.7)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'rgba(0,0,0,.7)'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \"Dosyay\\u0131 A\\xE7\")));\n  };\n\n  var locationView = function locationView(item) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        var location = JSON.parse(item.location);\n        onClickLocation(location);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }, user.id == item.user._id ? React.createElement(FontAwesome5, {\n      name: \"map-marked-alt\",\n      size: 30,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }) : React.createElement(FontAwesome5, {\n      name: \"map-marked-alt\",\n      size: 30,\n      color: \"rgba(0,0,0,.7)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var systemShow = function systemShow(item) {\n    console.log('system girdi');\n    return React.createElement(View, {\n      style: Styles.bubbleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return item.systemData ? onSystemMessage(item.systemData) : onSystemMessage('not systemData');\n      },\n      style: Styles.systemViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: Styles.systemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, item.text)), React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var leftView = function leftView(item) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onLongPress: function onLongPress() {\n        setItem(item);\n        setMessageposition('l');\n        setMessageState(!messageState);\n      },\n      onPress: function onPress() {\n        return setMessageState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.bubbleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: [Styles.bubleItemContainer, {\n        backgroundColor: 'white',\n        marginRight: 10\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }), item.image ? imageView(item.image) : item.images ? imagesView(item.images) : null, item.documents ? documentView(item) : null, item.video ? videoView(item) : null, item.location ? locationView(item) : null, React.createElement(Text, {\n      style: [Styles.bubleText, {\n        color: '#959494'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, item.text), item.quickReplies ? quickRepliesView(item.quickReplies, 'left') : null, React.createElement(View, {\n      style: Styles.infoContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: [Styles.timeText, {\n        color: '#959494'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, item.createdAt), item.annoucement ? React.createElement(Foundation, {\n      name: 'megaphone',\n      style: Styles.infoItem,\n      color: 'rgba(0,0,0,.3)',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }) : null, item.favorite ? React.createElement(AntDesign, {\n      style: Styles.messageStar,\n      color: '#FCDE08',\n      name: \"star\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }) : null)), React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var rightView = function rightView(item) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onLongPress: function onLongPress() {\n        setItem(item);\n        setMessageposition('r');\n        setMessageState(!messageState);\n      },\n      onPress: function onPress() {\n        return setMessageState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.bubbleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setMessageState(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: [Styles.bubleItemContainer, {\n        backgroundColor: '#1cafff',\n        marginRight: 10\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }\n    }, item.transmitted ? React.createElement(View, {\n      style: Styles.transmittedContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, React.createElement(AntDesign, {\n      style: Styles.settingButtonIcon,\n      color: 'white',\n      name: \"arrowright\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: Styles.transmittedText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }, \"iletildi\")) : null, item.image ? imageView(item.image) : item.images ? imagesView(item.images) : item.image_link ? imageView(item.image_link) : null, item.documents ? documentView(item) : null, item.video ? videoView(item) : null, item.location ? locationView(item) : null, React.createElement(Text, {\n      style: [Styles.bubleText, {\n        color: 'white'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, item.text), item.quickReplies ? quickRepliesView(item.quickReplies, 'right') : null, React.createElement(View, {\n      style: Styles.infoContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }, item.annoucement ? React.createElement(Foundation, {\n      name: 'megaphone',\n      color: 'rgba(0,0,0,.3)',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }) : null, item.favorite ? React.createElement(AntDesign, {\n      style: Styles.messageStar,\n      color: '#FCDE08',\n      name: \"star\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }) : null, React.createElement(View, {\n      style: Styles.flex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: Styles.timeText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, item.createdAt), item.tick != undefined ? tickView(item.tick) : null))));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: Styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    style: Styles.container,\n    source: backgroundImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    inverted: true,\n    data: data,\n    style: Styles.flatList,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, {\n        key: item.item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      }, item.item.system ? systemShow(item.item) : user.id === item.item.user._id ? rightView(item.item) : leftView(item.item));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }\n  }), textInputShow ? React.createElement(View, {\n    style: Styles.textInputFirstContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, PostButtonView ? React.createElement(View, {\n    style: Styles.postButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onPostClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: Styles.postButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }, React.createElement(IconMCI, {\n    color: 'rgba(0,0,0,.2)',\n    name: \"paperclip\",\n    size: 23,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 21\n    }\n  })))) : null, React.createElement(View, {\n    style: Styles.textInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: Styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    value: text,\n    onChangeText: function onChangeText(e) {\n      return setText(e);\n    },\n    multiline: true,\n    placeholder: textInputPlaceholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: Styles.sendButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      onSend([{\n        text: text\n      }]);\n      setText('');\n    },\n    style: [Styles.sendButton, {\n      backgroundColor: chatColor ? chatColor : 'black'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, React.createElement(IconMCI, {\n    color: 'white',\n    name: \"send\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  })))) : null, messageState ? messageSettings() : null, imageShowState ? imageShow() : null, postShowState ? postView() : null, writing ? React.createElement(View, {\n    style: Styles.writingContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.writingText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }\n  }, \"yaz\\u0131yor...\")) : null));\n};\n\nexport default ChatComponent;","map":{"version":3,"sources":["/home/nikita/bichat-client/bichat-client/node_modules/react-native-chat-component/src/ChatComponent/index.js"],"names":["React","FC","useEffect","useState","RecyclerViewBackedScrollView","AntDesign","IconMCI","FontAwesome5","Foundation","Styles","ChatComponent","data","onClickVideo","onClickDocument","onClickLocation","textInputShow","textInputPlaceholder","onSend","chatColor","user","onSystemMessage","onDeleteMessage","onfavoriteMessage","onPostClick","PostButtonView","tickViewShow","quickRepliesRightColor","quickRepliesLeftColor","onQuickReplies","backgroundImage","writing","text","setText","item","setItem","messageState","setMessageState","messagePosition","setMessageposition","imageShowState","setImageShowState","postShowState","setpostShowState","showItemImage","setShowItemImage","tickView","tick","imageView","image","uri","imagesView","images","imagesFlatList","id","imagesButton","imageShow","imageShowContainer","showImage","quickRepliesView","quickReplies","position","quickRepliesContainer","map","index","quickRepliesButton","borderColor","quickRepliesText","color","messageSettings","messageSettingsContainer","rightView","leftView","settingsContainer","backgroundColor","settingButton","settingButtonText","settingButtonIcon","Clipboard","setString","borderBottomWidth","postView","postContainer","postItemsContainer","videoView","video","_id","documentView","url","JSON","parse","documents","path","documentContainer","locationView","location","systemShow","console","log","bubbleContainer","flex","systemData","systemViewContainer","systemText","bubleItemContainer","marginRight","bubleText","infoContainer","timeText","createdAt","annoucement","infoItem","favorite","messageStar","transmitted","transmittedContainer","transmittedText","image_link","undefined","container","flatList","system","toString","textInputFirstContainer","postButtonContainer","postButton","textInputContainer","textInput","e","sendButtonContainer","sendButton","writingContainer","writingText"],"mappings":"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","sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  FlatList,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n  TouchableWithoutFeedback,\r\n  ImageBackground,\r\n  RecyclerViewBackedScrollView,\r\n  Linking,\r\n  Clipboard,\r\n} from 'react-native';\r\n\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport IconMCI from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport Foundation from 'react-native-vector-icons/Foundation';\r\nimport Styles from './styles';\r\n\r\nconst ChatComponent = ({\r\n  data,\r\n  onClickVideo,\r\n  onClickDocument,\r\n  onClickLocation,\r\n  textInputShow,\r\n  textInputPlaceholder,\r\n  onSend,\r\n  chatColor,\r\n  user,\r\n  onSystemMessage,\r\n  onDeleteMessage,\r\n  onfavoriteMessage,\r\n  onPostClick,\r\n  PostButtonView,\r\n  tickViewShow,\r\n  quickRepliesRightColor,\r\n  quickRepliesLeftColor,\r\n  onQuickReplies,\r\n  backgroundImage,\r\n  writing,\r\n}) => {\r\n  const [text, setText] = useState();\r\n  const [item, setItem] = useState();\r\n  const [messageState, setMessageState] = useState(false);\r\n  const [messagePosition, setMessageposition] = useState();\r\n  const [imageShowState, setImageShowState] = useState(false);\r\n  const [postShowState, setpostShowState] = useState(false);\r\n  const [showItemImage, setShowItemImage] = useState();\r\n\r\n  const tickView = (tick) => {\r\n    if (!tickViewShow) return null;\r\n    if (tick === '0') return null;\r\n    else if (tick == 1) return <IconMCI color={'white'} name=\"alarm-check\" />;\r\n    else if (tick == 2) return <IconMCI color={'white'} name=\"check\" />;\r\n    else if (tick == 3) return <IconMCI color={'white'} name=\"check-all\" />;\r\n    else if (tick == 4) return <IconMCI color={'#42fb05'} name=\"check-all\" />;\r\n  };\r\n  const imageView = (image) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setShowItemImage(image);\r\n          setImageShowState(!imageShowState);\r\n          setMessageState(false);\r\n        }}>\r\n        <Image style={Styles.image} source={{uri: image}} />\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const imagesView = (images) => {\r\n    return (\r\n      <FlatList\r\n        style={Styles.imagesFlatList}\r\n        data={images}\r\n        numColumns={2}\r\n        renderItem={(item) => (\r\n          <TouchableOpacity\r\n            key={item.item.id}\r\n            style={Styles.imagesButton}\r\n            onPress={() => {\r\n              setShowItemImage(item.item.image);\r\n              setImageShowState(!imageShowState);\r\n              setMessageState(false);\r\n            }}>\r\n            <Image style={Styles.images} source={{uri: item.item.image}} />\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  const imageShow = () => {\r\n    return (\r\n      <TouchableWithoutFeedback onPress={() => setImageShowState(false)}>\r\n        <View style={Styles.imageShowContainer}>\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            style={Styles.showImage}\r\n            source={{uri: showItemImage}}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n  const quickRepliesView = (quickReplies,position) => {\r\n    return (\r\n      <View style={Styles.quickRepliesContainer}>\r\n        {quickReplies.map((item, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            onPress={() => onQuickReplies(item)}\r\n            style={[Styles.quickRepliesButton, {borderColor:position=='left'?quickRepliesLeftColor:quickRepliesRightColor}]}>\r\n            <Text style={[Styles.quickRepliesText, {color: position=='left'?quickRepliesLeftColor:quickRepliesRightColor}]}>\r\n              {item.text}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    );\r\n  };\r\n  const messageSettings = () => {\r\n    return (\r\n      <TouchableWithoutFeedback onPress={() => setMessageState(false)}>\r\n        <View style={Styles.messageSettingsContainer}>\r\n          {messagePosition == 'r' ? rightView(item) : leftView(item)}\r\n          <View\r\n            style={[\r\n              Styles.settingsContainer,\r\n              {backgroundColor: messagePosition == 'r' ? '#1cafff' : 'white'},\r\n            ]}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                onfavoriteMessage(item);\r\n                setMessageState(false);\r\n              }}\r\n              style={Styles.settingButton}>\r\n              <Text\r\n                style={[\r\n                  Styles.settingButtonText,\r\n                  {color: messagePosition == 'r' ? 'white' : '#979797'},\r\n                ]}>\r\n                Yıldız\r\n              </Text>\r\n              <AntDesign\r\n                style={Styles.settingButtonIcon}\r\n                color={messagePosition == 'r' ? 'white' : '#979797'}\r\n                name=\"star\"\r\n              />\r\n            </TouchableOpacity>\r\n            {item.text ? (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  Clipboard.setString(item.text);\r\n                  setMessageState(false);\r\n                }}\r\n                style={Styles.settingButton}>\r\n                <Text\r\n                  style={[\r\n                    Styles.settingButtonText,\r\n                    {\r\n                      color: messagePosition == 'r' ? 'white' : '#979797',\r\n                    },\r\n                  ]}>\r\n                  Metin Kopyala\r\n                </Text>\r\n                <AntDesign\r\n                  style={Styles.settingButtonIcon}\r\n                  color={messagePosition == 'r' ? 'white' : '#979797'}\r\n                  name=\"link\"\r\n                />\r\n              </TouchableOpacity>\r\n            ) : null}\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                onDeleteMessage(item);\r\n                setMessageState(false);\r\n              }}\r\n              style={[Styles.settingButton, {borderBottomWidth: 0}]}>\r\n              <Text style={[Styles.settingButtonText, {color: '#FC4A4A'}]}>\r\n                Sil\r\n              </Text>\r\n              <IconMCI\r\n                style={Styles.settingButtonIcon}\r\n                color={'#FC4A4A'}\r\n                name=\"delete\"\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n  const postView = () => {\r\n    return (\r\n      <TouchableWithoutFeedback onPress={() => setpostShowState(false)}>\r\n        <View style={Styles.postContainer}>\r\n          <View style={Styles.postItemsContainer} />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n  const videoView = (item) => {\r\n    return (\r\n      <TouchableOpacity onPress={() => onClickVideo(item.video)}>\r\n        <View style={Styles.video}>\r\n          {user.id == item.user._id ? (\r\n            <AntDesign name=\"play\" size={30} color=\"white\" />\r\n          ) : (\r\n            <AntDesign name=\"play\" size={30} color=\"rgba(0,0,0,.7)\" />\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const documentView = (item) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          const url = JSON.parse(item.documents).path;\r\n          onClickDocument(url);\r\n        }}\r\n        style={Styles.documentContainer}>\r\n        {item.user._id == user.id ? (\r\n          <>\r\n            <IconMCI name=\"file-document\" size={30} color=\"white\" />\r\n            <Text style={{color: 'white'}}>Dosyayı Aç</Text>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <IconMCI name=\"file-document\" size={30} color=\"rgba(0,0,0,.7)\" />\r\n            <Text style={{color: 'rgba(0,0,0,.7)'}}>Dosyayı Aç</Text>\r\n          </>\r\n        )}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const locationView = (item) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          let location = JSON.parse(item.location);\r\n          onClickLocation(location);\r\n        }}>\r\n        <View style={Styles.location}>\r\n          {user.id == item.user._id ? (\r\n            <FontAwesome5 name=\"map-marked-alt\" size={30} color=\"white\" />\r\n          ) : (\r\n            <FontAwesome5\r\n              name=\"map-marked-alt\"\r\n              size={30}\r\n              color=\"rgba(0,0,0,.7)\"\r\n            />\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const systemShow = (item) => {\r\n    console.log('system girdi');\r\n    return (\r\n      <View style={Styles.bubbleContainer}>\r\n        <View style={Styles.flex} />\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            item.systemData\r\n              ? onSystemMessage(item.systemData)\r\n              : onSystemMessage('not systemData')\r\n          }\r\n          style={Styles.systemViewContainer}>\r\n          <Text style={Styles.systemText}>{item.text}</Text>\r\n        </TouchableOpacity>\r\n        <View style={Styles.flex} />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const leftView = (item: any) => {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onLongPress={() => {\r\n          setItem(item);\r\n          setMessageposition('l');\r\n          setMessageState(!messageState);\r\n        }}\r\n        onPress={() => setMessageState(false)}>\r\n        <View style={Styles.bubbleContainer}>\r\n          <View\r\n            style={[\r\n              Styles.bubleItemContainer,\r\n              {backgroundColor: 'white', marginRight: 10},\r\n            ]}>\r\n            <View style={Styles.flex} />\r\n            {item.image\r\n              ? imageView(item.image)\r\n              : item.images\r\n              ? imagesView(item.images)\r\n              : null}\r\n\r\n            {item.documents ? documentView(item) : null}\r\n            {item.video ? videoView(item) : null}\r\n            {item.location ? locationView(item) : null}\r\n            <Text style={[Styles.bubleText, {color: '#959494'}]}>\r\n              {item.text}\r\n            </Text>\r\n            {item.quickReplies ? quickRepliesView(item.quickReplies,'left') : null}\r\n            <View style={Styles.infoContainer}>\r\n              <View style={Styles.flex} />\r\n\r\n              <Text style={[Styles.timeText, {color: '#959494'}]}>\r\n                {item.createdAt}\r\n              </Text>\r\n              {item.annoucement ? (\r\n                <Foundation\r\n                  name={'megaphone'}\r\n                  style={Styles.infoItem}\r\n                  color={'rgba(0,0,0,.3)'}\r\n                />\r\n              ) : null}\r\n              {item.favorite ? (\r\n                <AntDesign\r\n                  style={Styles.messageStar}\r\n                  color={'#FCDE08'}\r\n                  name=\"star\"\r\n                />\r\n              ) : null}\r\n            </View>\r\n          </View>\r\n          <View style={Styles.flex} />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n  const rightView = (item: any) => {\r\n    return (\r\n      <TouchableWithoutFeedback\r\n        onLongPress={() => {\r\n          setItem(item);\r\n          setMessageposition('r');\r\n          setMessageState(!messageState);\r\n        }}\r\n        onPress={() => setMessageState(false)}>\r\n        <View style={Styles.bubbleContainer}>\r\n          <TouchableWithoutFeedback onPress={() => setMessageState(false)}>\r\n            <View style={Styles.flex} />\r\n          </TouchableWithoutFeedback>\r\n          <View\r\n            style={[\r\n              Styles.bubleItemContainer,\r\n              {backgroundColor: '#1cafff', marginRight: 10},\r\n            ]}>\r\n            {item.transmitted ? (\r\n              <View style={Styles.transmittedContainer}>\r\n                <AntDesign\r\n                  style={Styles.settingButtonIcon}\r\n                  color={'white'}\r\n                  name=\"arrowright\"\r\n                />\r\n                <Text style={Styles.transmittedText}>iletildi</Text>\r\n              </View>\r\n            ) : null}\r\n            {item.image\r\n              ? imageView(item.image)\r\n              : item.images\r\n              ? imagesView(item.images)\r\n              : item.image_link\r\n              ? imageView(item.image_link)\r\n              : null}\r\n\r\n            {item.documents ? documentView(item) : null}\r\n            {item.video ? videoView(item) : null}\r\n            {item.location ? locationView(item) : null}\r\n            <Text style={[Styles.bubleText, {color: 'white'}]}>\r\n              {item.text}\r\n            </Text>\r\n            {item.quickReplies ? quickRepliesView(item.quickReplies,'right') : null}\r\n            <View style={Styles.infoContainer}>\r\n              {item.annoucement ? (\r\n                <Foundation name={'megaphone'} color={'rgba(0,0,0,.3)'} />\r\n              ) : null}\r\n              {item.favorite ? (\r\n                <AntDesign\r\n                  style={Styles.messageStar}\r\n                  color={'#FCDE08'}\r\n                  name=\"star\"\r\n                />\r\n              ) : null}\r\n\r\n              <View style={Styles.flex} />\r\n              <Text style={Styles.timeText}>{item.createdAt}</Text>\r\n              {item.tick != undefined ? tickView(item.tick) : null}\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  };\r\n  return (\r\n    <SafeAreaView style={Styles.container}>\r\n      <ImageBackground style={Styles.container} source={backgroundImage}>\r\n        <FlatList\r\n          inverted={true}\r\n          data={data}\r\n          // pagingEnabled={true}\r\n          style={Styles.flatList}\r\n          renderItem={(item: any) => {\r\n            return (\r\n              <View key={item.item.id}>\r\n                {item.item.system\r\n                  ? systemShow(item.item)\r\n                  : user.id === item.item.user._id\r\n                  ? rightView(item.item)\r\n                  : leftView(item.item)}\r\n              </View>\r\n            );\r\n          }}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n        {textInputShow ? (\r\n          <View style={Styles.textInputFirstContainer}>\r\n            {PostButtonView ? (\r\n              <View style={Styles.postButtonContainer}>\r\n                <TouchableOpacity onPress={() => onPostClick()}>\r\n                  <View style={Styles.postButton}>\r\n                    <IconMCI\r\n                      color={'rgba(0,0,0,.2)'}\r\n                      name=\"paperclip\"\r\n                      size={23}\r\n                    />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            ) : null}\r\n            <View style={Styles.textInputContainer}>\r\n              <View style={Styles.textInput}>\r\n                <TextInput\r\n                  value={text}\r\n                  onChangeText={(e) => setText(e)}\r\n                  multiline={true}\r\n                  placeholder={textInputPlaceholder}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={Styles.sendButtonContainer}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSend([\r\n                    {\r\n                      text: text,\r\n                    },\r\n                  ]);\r\n                  setText('');\r\n                }}\r\n                style={[\r\n                  Styles.sendButton,\r\n                  {backgroundColor: chatColor ? chatColor : 'black'},\r\n                ]}>\r\n                <IconMCI color={'white'} name=\"send\" size={20} />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        ) : null}\r\n        {messageState ? messageSettings() : null}\r\n        {imageShowState ? imageShow() : null}\r\n        {postShowState ? postView() : null}\r\n        {writing ? (\r\n          <View style={Styles.writingContainer}>\r\n            <Text style={Styles.writingText}>yazıyor...</Text>\r\n          </View>\r\n        ) : null}\r\n      </ImageBackground>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"]},"metadata":{},"sourceType":"module"}